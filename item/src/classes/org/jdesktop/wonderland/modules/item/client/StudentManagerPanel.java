/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jdesktop.wonderland.modules.item.client;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JRadioButton;
import org.jdesktop.wonderland.modules.item.common.Abilities;
import org.jdesktop.wonderland.modules.item.common.ScavengerHuntStudent;

/**
 * JPanel with a List and RadioButtons to assign users one of four abilities for
 * the scavenger hunt. JPanel is thought to be used within a HUD component.
 *
 * Only admins should be able to call up and use this panel! (see StudentManager
 * component)
 *
 * @author Lisa Tomes <lisa.tomes@student.tugraz.at>
 */
public class StudentManagerPanel extends javax.swing.JPanel
{

  private StudentManager studentManager;

  private final DefaultListModel<ScavengerHuntStudent> listModel;

  private final JRadioButton[] buttons;

  /**
   * Creates new form StudentManagerPanel
   */
  public StudentManagerPanel()
  {
    initComponents();

    this.buttons = new JRadioButton[]
    {
      rbRole1, rbRole2, rbRole3, rbRole4
    };

    int i = 0;
    for (JRadioButton button : buttons)
    {
      buttonGroup1.add(button);

      Abilities.Ability ability = Abilities.getAbilityFromInt(i);
      String abilityString = Abilities.getStringFromAbility(ability);
      button.setText(abilityString);
      i++;

      button.addActionListener(new AbilityRadioButtonListener());
    }

    listModel = new DefaultListModel<ScavengerHuntStudent>();
    ltStudents.setModel(listModel);

    btApply.setText("Apply");
    btRefresh.setText("Refresh");

    lbSaved.setText(" ");
  }

  public void doWork(StudentManager studentManager)
  {
    this.studentManager = studentManager;
    fillList();
  }

  private void fillList()
  {
    int selIndex = ltStudents.getSelectedIndex();

    listModel.clear();

    Set<Map.Entry<String, ScavengerHuntStudent>> entrySet = studentManager.getStudents().entrySet();
    for (Map.Entry<String, ScavengerHuntStudent> entry : entrySet)
    {
      ScavengerHuntStudent student = entry.getValue();
      ScavengerHuntStudent copy = new ScavengerHuntStudent(student.getUsername(), student.getAbility());
      listModel.addElement(copy);
    }

    ltStudents.clearSelection();
    if (selIndex < -1 && selIndex < listModel.size())
    {
      ltStudents.setSelectedIndex(selIndex);
    }
    else if (listModel.size() > 0)
    {
      ltStudents.setSelectedIndex(0);
    }
  }

  private void refreshRadioButtons(int selIndex)
  {
    if (selIndex >= 0)
    {
      ScavengerHuntStudent selStudent = listModel.get(selIndex);
      setSelectedAbility(selStudent.getAbility());
    }
  }

  private Abilities.Ability getSelectedAbility()
  {
    int i = 0;
    for (JRadioButton button : buttons)
    {
      if (button.isSelected())
      {
        return Abilities.getAbilityFromInt(i);
      }
      i++;
    }

    return Abilities.Ability.UNKNOWN;
  }

  class AbilityRadioButtonListener implements ActionListener
  {

    @Override
    public void actionPerformed(ActionEvent e)
    {

    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    buttonGroup1 = new javax.swing.ButtonGroup();
    spStudents = new javax.swing.JScrollPane();
    ltStudents = new javax.swing.JList();
    jPanel1 = new javax.swing.JPanel();
    rbRole1 = new javax.swing.JRadioButton();
    rbRole2 = new javax.swing.JRadioButton();
    rbRole3 = new javax.swing.JRadioButton();
    rbRole4 = new javax.swing.JRadioButton();
    btApply = new javax.swing.JButton();
    btRefresh = new javax.swing.JButton();
    lbSaved = new javax.swing.JLabel();

    setPreferredSize(new java.awt.Dimension(490, 350));

    ltStudents.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ltStudents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    ltStudents.addListSelectionListener(new javax.swing.event.ListSelectionListener()
    {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt)
      {
        ltStudentsValueChanged(evt);
      }
    });
    spStudents.setViewportView(ltStudents);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Role:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
    jPanel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

    rbRole1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    rbRole1.setText("jRadioButton1");

    rbRole2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    rbRole2.setText("jRadioButton2");

    rbRole3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    rbRole3.setText("jRadioButton3");

    rbRole4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    rbRole4.setText("jRadioButton4");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(rbRole1)
          .addComponent(rbRole2)
          .addComponent(rbRole3)
          .addComponent(rbRole4))
        .addContainerGap(49, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(rbRole1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(rbRole2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(rbRole3)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(rbRole4)
        .addGap(0, 8, Short.MAX_VALUE))
    );

    btApply.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    btApply.setText("jButton1");
    btApply.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btApplyActionPerformed(evt);
      }
    });

    btRefresh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    btRefresh.setText("jButton2");
    btRefresh.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btRefreshActionPerformed(evt);
      }
    });

    lbSaved.setText("Saved!");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(spStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lbSaved, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(btApply)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btRefresh)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(btApply)
              .addComponent(btRefresh))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lbSaved))
          .addComponent(spStudents))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  class StatusDisplayer implements Runnable
  {

    @Override
    public void run()
    {
      lbSaved.setText("Saved!");
      try
      {
        Thread.sleep(2000);
      }
      catch (InterruptedException ex)
      {
        Thread.currentThread().interrupt();
      }

      lbSaved.setText(" ");
    }
  }

  private void btApplyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btApplyActionPerformed
  {//GEN-HEADEREND:event_btApplyActionPerformed
    int selectedIndex = ltStudents.getSelectedIndex();
    if (selectedIndex >= 0 && selectedIndex < listModel.getSize())
    {
      ScavengerHuntStudent selStudent = listModel.get(selectedIndex);
      selStudent.setAbility(getSelectedAbility());
      studentManager.saveStudent(selStudent);
    }

    Thread displayer = new Thread(new StatusDisplayer());
    displayer.start();
  }//GEN-LAST:event_btApplyActionPerformed

  private void btRefreshActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btRefreshActionPerformed
  {//GEN-HEADEREND:event_btRefreshActionPerformed
    fillList();

    int selIndex = ltStudents.getSelectedIndex();
    refreshRadioButtons(selIndex);
  }//GEN-LAST:event_btRefreshActionPerformed

  private void setSelectedAbility(Abilities.Ability ability)
  {
//    for (JRadioButton button : buttons)
//    {
//      button.setSelected(false);
//      button.updateUI();
//    }

    buttonGroup1.clearSelection();
//    System.out.println("Cleared selection");

    int index = Abilities.getIntFromAbility(ability);
    if (index > -1 && index < buttons.length)
    {
      buttons[index].setSelected(true);
      buttons[index].updateUI();
//      System.out.println("Selected button " + index);
    }
  }

  private void ltStudentsValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_ltStudentsValueChanged
  {//GEN-HEADEREND:event_ltStudentsValueChanged
//    System.out.println("ltStudentsValueChanged");

    int selIndex = ltStudents.getSelectedIndex();
    refreshRadioButtons(selIndex);
  }//GEN-LAST:event_ltStudentsValueChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btApply;
  private javax.swing.JButton btRefresh;
  private javax.swing.ButtonGroup buttonGroup1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel lbSaved;
  private javax.swing.JList ltStudents;
  private javax.swing.JRadioButton rbRole1;
  private javax.swing.JRadioButton rbRole2;
  private javax.swing.JRadioButton rbRole3;
  private javax.swing.JRadioButton rbRole4;
  private javax.swing.JScrollPane spStudents;
  // End of variables declaration//GEN-END:variables

}
